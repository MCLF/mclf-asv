{"show_commit_url": "#", "tags": {"1.0.4": 404, "1.0.5": 468, "1.0.6": 481, "1.0.1": 374, "1.0.2": 382, "1.0.3": 391, "1.0.4-dev": 394}, "project_url": "https://github.com/MCLF/mclf", "hash_length": 8, "pages": [["", "Grid view", "Display as a agrid"], ["summarylist", "List view", "Display as a list"], ["regressions", "Show regressions", "Display information about recent regressions"]], "machines": {"CircleCI": {"arch": "x86_64", "ram": "61830880", "machine": "CircleCI", "version": 1, "os": "Linux", "cpu": "Intel(R) Xeon(R) CPU E5-2680 v2 @ 2.80GHz or similar"}}, "revision_to_date": {"481": 1597128170000, "374": 1533483782000, "391": 1533746372000, "394": 1533769964000, "468": 1584096147000, "596": 1725548804000, "598": 1725896121000, "600": 1726680382000, "404": 1534332840000, "602": 1726778101000, "605": 1726834807000, "382": 1533506764000}, "graph_param_list": [{"machine": "CircleCI", "branch": "master", "python": "2.7", "arch": "x86_64", "ram": "61830880", "os": "Linux", "cpu": "Intel(R) Xeon(R) CPU E5-2680 v2 @ 2.80GHz or similar"}], "project": "mclf", "params": {"python": ["2.7"], "arch": ["x86_64"], "ram": ["61830880"], "machine": ["CircleCI"], "branch": ["master"], "os": ["Linux"], "cpu": ["Intel(R) Xeon(R) CPU E5-2680 v2 @ 2.80GHz or similar"]}, "benchmarks": {"semistable.JSMCurve.time_is_semistable": {"code": "class JSMCurve:\n    def time_is_semistable(self):\n        K = FunctionField(QQ, 'x')\n        x = K.gen()\n        R = PolynomialRing(K, 'T')\n        T = R.gen()\n        f = 64*x**3*T - 64*x**3 + 36*x**2*T**2 + 208*x**2*T + 192*x**2 + 9*x*T**3 + 72*x*T**2 + 240*x*T + 64*x + T**4 + 9*T**3 + 52*T**2 + 48*T\n        L = K.extension(f, 'y')\n        Y = SmoothProjectiveCurve(L)\n        v = QQ.valuation(13)\n        M = SemistableModel(Y, v)\n        return M.is_semistable()", "name": "semistable.JSMCurve.time_is_semistable", "sample_time": 0.01, "version": "905d052badae6f147cf4a29d7f2c8282ef49d46f9cabdd016bf2b121565b71ba", "number": 0, "min_run_count": 2, "params": [], "unit": "seconds", "timeout": 60.0, "param_names": [], "type": "time", "rounds": 2, "repeat": 0, "warmup_time": -1}, "semistable.PicardCurve.time_is_semistable": {"code": "class PicardCurve:\n    def time_is_semistable(self):\n        R = PolynomialRing(QQ, 'x')\n        x = R.gen()\n        Y = SuperellipticCurve(x**4 - 1, 3)\n        v_2 = QQ.valuation(2)\n        Y2 = SemistableModel(Y, v_2)\n        return Y2.is_semistable()", "name": "semistable.PicardCurve.time_is_semistable", "sample_time": 0.01, "version": "9c169ec9f50d4f63e7c751316bb00a7fd6e602c13f4823c46648d0c416fd4822", "number": 0, "min_run_count": 2, "params": [], "unit": "seconds", "timeout": 60.0, "param_names": [], "type": "time", "rounds": 2, "repeat": 0, "warmup_time": -1}}, "revision_to_hash": {"481": "083c13eaf95255e2de43a5befc74e4fc50ebf404", "374": "94ffa0bc6fb917cbc002804e89ad23af9129b9c4", "391": "3bd39cb70548980681b52cc7077dfbc507f49a9f", "394": "b45482dadeac4776d325ea54b5afa8e93215d1cd", "468": "ba1b8837ac6c00c5b4b427f1ce063c02bcb385a2", "596": "a8abe6891af53be85c5e99be1dd044eefe599d87", "598": "ff05ae776b3b2b2e6a582a2c8101b5b8916adc65", "600": "2a7822831f7d87d1f074f8403eb2ace146e0543c", "404": "d78117c77c7be9bdde8d845bdbd2f6e43f688c10", "602": "7e3a3b86ad822b4ec63c4961c9324699cca82d9a", "605": "7375b79d94c74506af97a3c4fcd33fcf1028f51f", "382": "25893699a971b48f6c53b2a58daa81bf4037b85a"}}